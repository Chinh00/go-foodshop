// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"github.com/labstack/echo/v4"
	"go-foodshop/cmd/api/config"
	"go-foodshop/src/infra/database/postgres"
	"go-foodshop/src/usecase"
)

import (
	_ "go-foodshop/docs"
)

// Injectors from wire.go:

func InitApp(config2 *config.Config) (*App, error) {
	postgresConfig := CatPostgresConfig(config2)
	repository := usecase.NewPgFoodRepository(postgresConfig)
	usecaseUsecase := usecase.New(repository)
	echoEcho := echo.New()
	controller := NewController(usecaseUsecase)
	app := NewApp(repository, usecaseUsecase, config2, echoEcho, controller)
	return app, nil
}

// wire.go:

func CatPostgresConfig(config2 *config.Config) *postgres.PostgresConfig {
	return &postgres.PostgresConfig{
		Host:     config2.PostgresConfig.Host,
		Port:     config2.PostgresConfig.Port,
		Username: config2.PostgresConfig.Username,
		Password: config2.PostgresConfig.Password,
		Database: config2.PostgresConfig.Database,
	}
}
